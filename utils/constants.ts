export const unicodeLatexCharacters = [['∈', '$\\in$'],
  ['•', '$\\bullet$'],
  ['∀', '$\\forall$'],
  ['∧L', '$\\land_{L}$'],
  ['∨L', '$\\lor_{L}$'],
  ['⟶L', '$\\longrightarrow_{L}$'],
  ['⟹L', '$\\longrightarrow_{L}$'],
  ['⇒L', '$\\longrightarrow_{L}$'],
  ['∧', '$\\land$'],
  ['∨', '$\\lor$'],
  ['⟶', '$\\longrightarrow$'],
  ['⟹', '$\\longrightarrow$'],
  ['⇒', '$\\longrightarrow$'],
  ['⟵', '$\\longleftarrow$'],
  ['←', '$\\longleftarrow$'],
  ['&', '\&'],
  ['⟨', '$\\langle$'],
  ['⟩', '$\\rangle$'],
  ['#', '\\#'],
  ['Θ', '$\\Theta$'],
  ['Σ', '$\\Sigma$'],
  ['≡', '$\\equiv$'],
  ['⟺', '$\\longleftrightarrow$'],
  ['=obs', '=$_{obs}$'],
  ['<', '<\\'],
  ['>', '>\\'],
  ['≠', '$\\neq$'],
  ['!=', '$\\neq$'],
  ['	', '    '],
  ['≤', '$\\leq$'],
  ['≥', '$\\geq$'],
  ['&&', '$\\&\\&$'],
  ['₀', '$_{0}$'],
  ['²', '$^{2}$'],
  ['₁', '$_{1}$'],
  ['₂', '$_{2}$'],
  ['₃', '$_{3}$'],
  ['π', '$\\pi$'],
  ['∅', '$\\emptyset$'],
  ['⟷', '$\\longleftrightarrow$'],];

export const regexPatterns: {[key: string]: RegExp} = {
  interfaceName: /[^ ]+?(?=\(in)/gi,
  algorithmName: /[^ ]+?(?=\(in)/gi,
  parameters: /\(in.+?.+\)/gi,
  resultType: / (⟶|⇒|=>|→) res:.+/gi,
  pre: /pre +≡ {(.|\n)+?}(\n|$)/gi,
  post: /post +≡ {(.|\n)+?}(\n|$)/gi,
  complexity: /complejidad: +(o|Θ)(.+)(\n|$)/gi,
  description: /descripci[oó]n:.+(\n|$)/gi,
  aliasing: /aliasing:.+(\n|$)/gi,
}